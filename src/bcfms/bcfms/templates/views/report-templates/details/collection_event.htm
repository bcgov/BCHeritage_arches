<div class="bc-grid-container">
    <div class="bc-grid-item grid-col-1 grid-row-1">
        <dl class="dl-vertical dl-vertical-bc scientific-name" >
            <dt>Detailed Location</dt>
            <dd>
                <div>
                    <div data-bind="component: {name: 'rich-text-widget',
                                                params: {value: getFirstNodeValue('detailed_location'),
                                                         state: 'display_value',
                                                         displayfullvalue: true}
                                            }">
                    </div>
                    <div data-bind="text: getPoint('collection_location')"></div>
                </div>
            </dd>
        </dl>
    </div>
    <!-- Map and coordinates here -->
    <div class="bc-grid-item grid-col-2 grid-row-1" data-bind="visible: nodesHaveData(['nts_mapsheet_number','nts_mapsheet_name'])">
        <dl class="dl-vertical dl-vertical-bc" >
            <dt>1:50k Mapsheet</dt>
            <dd>
                <div data-bind="component: { name: 'text-widget',
                                            params: { value: ko.unwrap(getFirstNodeValue('nts_mapsheet_number')), state: 'display_value' }
                                            }">
                </div>
                <div data-bind="component: { name: 'text-widget',
                                            params: { value: ko.unwrap(getFirstNodeValue('nts_mapsheet_name')), state: 'display_value' }
                                            }">
                </div>
            </dd>
        </dl>
    </div>
    <div class="bc-grid-item grid-col-1 grid-row-2">
        <dl class="dl-vertical dl-vertical-bc" >
            <dt>1:250k Mapsheet</dt>
            <dd>
                <div data-bind="component: { name: 'text-widget',
                                            params: { value: ko.unwrap(getFirstNodeValue('geographical_name')), state: 'display_value' }
                                            }, visible: nodesHaveData(['geographical_name'])">
                </div>
            </dd>
        </dl>
    </div>

    <div class="bc-grid-item grid-col-2 grid-row-2">
        <dl class="dl-vertical dl-vertical-bc" >
            <dt>Collection Year</dt>
            <dd>
                <!-- ko let: {widget: getWidgetForAlias('collection_start_year')}-->
                <div class="bc-inline" data-bind="component: {
                    name: 'datepicker-widget',
                    params: { value: getFirstNodeValue('collection_start_year'),
                              node: widget.node,
                              state: 'display_value' }
                    }">
                </div>
                <!-- /ko -->
            </dd>
        </dl>
    </div>

    <div class="bc-grid-item grid-col-1 grid-row-3">
        <dl class="dl-vertical dl-vertical-bc" >
            <dt>Collectors</dt>
            <dd>
                <div class="bc-inline" data-bind="component: { name: 'resource-instance-multiselect-widget',
                                            params: { value: getFirstNodeValue('collectors'), state: 'display_value' }
                                            }, visible: nodesHaveData(['collectors'])">
                </div>
                <div data-bind="visible: !!getFirstNodeValue('collector_unknown')()">Collectors unknown</div>
            </dd>
        </dl>
    </div>
    <div class="bc-grid-item grid-col-2 grid-row-3" data-bind="visible: nodesHaveData(['fossil_abundance', 'samples_collected'])">
        <dl class="dl-vertical dl-vertical-bc">
            <dt data-bind="visible: nodesHaveData(['samples_collected'])">Samples Collected</dt>
            <dd>
                <div class="bc-inline" data-bind="component: { name: 'resource-instance-multiselect-widget',
                                            params: { value: getFirstNodeValue('samples_collected'), state: 'display_value' }
                                            }, visible: nodesHaveData(['samples_collected'])">
                </div>
            </dd>
            <dt data-bind="visible: !!fossilNamesForCollectionEvent().length > 0 ">Fossils Found</dt>
            <dd data-bind="foreach: {data: fossilNamesForCollectionEvent, as: 'name'}">
                <div data-bind="text: name"></div>
            </dd>
            <dt data-bind="visible: nodesHaveData(['fossil_abundance'])">Fossil Abundance</dt>
            <dd data-bind="visible: nodesHaveData(['fossil_abundance'])">
                <div data-bind="component:
                    { name: 'concept-select-widget',
                      params: { value: getFirstNodeValue('fossil_abundance'), state: 'display_value' }
                }">
                </div>
            </dd>
        </dl>
    </div>
    <div class="bc-grid-item grid-col-1 grid-row-4" data-bind="visible: nodesHaveData(['collection_event_significant'])">
        <dl class="dl-vertical dl-vertical-bc">
            <dt>Significance</dt>
            <dd>
                <div data-bind="visible: !!getFirstNodeValue('collector_unknown')()">Significant</div>
                <div data-bind="visible: !getFirstNodeValue('collector_unknown')()">Non-significant</div>
            </dd>
        </dl>
    </div>
</div>