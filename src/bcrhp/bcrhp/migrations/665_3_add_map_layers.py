# Generated by Django 4.2.13 on 2024-06-18 10:12

from django.core.management import call_command
from django.db import migrations
from django.db.migrations.operations.special import RunPython

from bcrhp.settings import APP_ROOT

mapbox_overlays_dir = f"{APP_ROOT}/pkg/map_layers/mapbox_spec_json/overlays"


def forward(apps, schema_editor):
    call_command(
        "packages",
        operation="add_mapbox_layer",
        layer_name="Islands Trust Administrative Boundaries Outlined",
        mapbox_json_path=f"{mapbox_overlays_dir}/islands-trust-admin-boundaries-outlined/islands-trust-admin-boundaries-outlined.json",
    )
    call_command(
        "packages",
        operation="add_mapbox_layer",
        layer_name="Local Trust Administrative Boundaries",
        mapbox_json_path=f"{mapbox_overlays_dir}/local-trust-admin-boundaries/local-trust-admin-boundaries.json",
    )
    call_command(
        "packages",
        operation="add_mapbox_layer",
        layer_name="Tourism Regions",
        mapbox_json_path=f"{mapbox_overlays_dir}/tourism-regions/tourism-regions.json",
    )
    call_command(
        "packages",
        operation="add_mapbox_layer",
        layer_name="Tantalis Surveyed Parcel",
        mapbox_json_path=f"{mapbox_overlays_dir}/tantalis-surveyed-parcel/tantalis-surveyed-parcel.json",
    )


def backward(apps, schema_editor):
    call_command(
        "packages",
        operation="delete_mapbox_layer",
        layer_name="Islands Trust Administrative Boundaries Outlined",
    )
    call_command(
        "packages",
        operation="delete_mapbox_layer",
        layer_name="Local Trust Administrative Boundaries",
    )
    call_command(
        "packages", operation="delete_mapbox_layer", layer_name="Tourism Regions"
    )
    call_command(
        "packages",
        operation="delete_mapbox_layer",
        layer_name="Tantalis Surveyed Parcel",
    )


class Migration(migrations.Migration):

    dependencies = [
        ("bcrhp", "665_2_update_map_layer"),
    ]

    operations = [RunPython(forward, backward)]
